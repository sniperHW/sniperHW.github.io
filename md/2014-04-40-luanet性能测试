测试环境 intel-i5 双核 2.53HZ 服务器客户端均在本机运行

测试内容:echo回射,每个包的字节数在20字节内

luanet
 
	连接数    每秒回射数			
	1         19,000/s
	10        12,5000/s
	100       12,0000/s
	1000      80,000/s 

node.js
	
	连接数    每秒回射数			
	1         27,000/s
	10        30,000/s
	100       30,000/s
	1000      27,000/s
	
从测试结果上看只有在1个连接的情况下luanet不如node.js,当连接数上去之后
luanet每秒的回射数基本都在node.js的3倍左右.

echo.js

		var net = require('net');
		var server = net.createServer(function(c) { // 'connection' 监听器
		  console.log('一个新连接');
		  c.on('end', function() {
			console.log('连接断开');
		  });
		  c.on('data',function(data){
			c.write(data);
		  });
		  c.on('close',function(){
			  console.log('连接断开');
		  });   
		  c.on('error',function(e){
		  });  
		});
		server.listen(8010, function() { // 'listening' 监听器
		  console.log('服务器监听8010');
		});


luanet rpc测试：客户端调用服务端的Plus函数,函数只是把客户端提供的两个参数相加并返回

平均每秒rpc调用次数在6,8000左右.而用C+协程实现的版本在70,0000左右.我试着用luajit来运行
同样的测试,非常意外的是性能差了一大截,只有可怜的4,000次,具体原因还在调查中.	

		


			
