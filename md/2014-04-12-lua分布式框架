最近用lua编写一个简单的分布式框架，主要用于开发一些对性能要求不那么高的分布式应用，其中手游服务器就是面向的目标对象之一.

这个分布式框架的特性如下:

1) 异步IO

2）单线程，多coroutine

3) 支持流和数据报协议

4) 支持消息和RPC通讯

5) 对上层隐藏连接的概念，进程之间通过唯一的名字通讯

6) 消息格式为lua table

7) 跨平台（暂时只考虑实现linux版本)

整个框架在通讯方面只暴露3个函数:

	SendMsg(name,msg)
	向远程服务name发送一条msg，如果与name还没有建立通讯连接，则由SendMsg函数内部向nameservice查询name的信息
	并建立通讯连接.


	RpcCall(name,funcname,argument)
	向name发起一个远程调用，请求执行funcname方法，如果与name的通讯连接没有建立执行与SendMsg一样的步骤

	GetRemoteFuncProvider(funcname)
	返回所有提供funcname远程方法的服务的名字(自己除外)

这个项目被命名为luanet,与另一个用lua实现的分布式框架currentlua的主要区别在于,currentlua中使用了与erlang中类似
的轻量级进程的概念，用lua coroutine模拟了轻量级进程，有自己的pid和邮箱，轻量级进程之间可以通信，即使它们处于不同的
进程.

而在luanet中，通信的单位就是操作系统进程,每个进程只有一个消息队列.coroutine的作用只是为了实现化异步为同步.

luanet的服务器结构很简单，唯一的约束就是要部署一个名字服务,在此框架下开发的应用在启动之后首先要跟名字服务建立连接将自己
的名字和相关信息注册到名字服务上以供其它应用查询.

luanet目前正在开发阶段，感兴趣的朋友可以关注[luanet](https://github.com/sniperHW/luanet)


